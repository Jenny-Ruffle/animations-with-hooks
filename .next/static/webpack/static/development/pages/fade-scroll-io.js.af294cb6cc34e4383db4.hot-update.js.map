{"version":3,"file":"static/webpack/static/development/pages/fade-scroll-io.js.af294cb6cc34e4383db4.hot-update.js","sources":["webpack:///./components/nav.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { createComponent } from \"react-fela\";\nimport Link from \"next/link\";\nimport { HeadingMedium } from \"./StyledText\";\n\nconst navigationBar = () => ({\n  display: \"flex\",\n  height: \"38px\",\n  backgroundColor: \"white\"\n});\n\nconst NavigationBar = createComponent(navigationBar, \"nav\");\n\nconst DropdownCaret = () => (\n  <svg width=\"30\" height=\"30\">\n    <path d=\"M24 11.305l-7.997 11.39L8 11.305z\" />\n  </svg>\n);\n\nconst dropdownArea = () => ({\n  float: \"left\",\n  overflow: \"hidden\"\n});\n\nconst DropdownArea = createComponent(dropdownArea, \"div\");\n\nconst dropdownButton = () => ({\n  border: \"none\",\n  outline: \"none\",\n  height: \"30px\",\n  padding: \"0 0 0 4px\",\n  \":hover\": {\n    cursor: \"pointer\"\n  }\n});\n\nconst DropdownButton = createComponent(dropdownButton, \"button\", [\"onClick\"]);\n\nconst dropdownList = ({ open }) => ({\n  display: open ? \"flex\" : \"none\",\n  flexDirection: \"column\",\n  position: \"absolute\",\n  backgroundColor: \"white\",\n  minWidth: \"250px\",\n  boxShadow: \"rgba(0, 0, 0, 0.1) 0px 10px 8px 0px\",\n  zIndex: 20,\n  padding: \"6px\"\n});\n\nconst DropdownList = createComponent(dropdownList, \"div\");\n\nconst pageLink = () => ({\n  textDecoration: \"none\",\n  font: \"12px/18px Verdana, serif\",\n  padding: \"4px\",\n  color: \"black\",\n  \":hover\": {\n    cursor: \"pointer\",\n    color: \"#008f9c\",\n    fontStyle: \"bold\"\n  }\n});\n\nconst PageLink = createComponent(pageLink, \"a\", []);\n\nconst Navigation = ({ animations }) => {\n  const [dropdownOpen, setDropdownOpen] = useState(0);\n  return (\n    <NavigationBar>\n      <Link href=\"/\">\n        <a>\n          <HeadingMedium>Animation Library</HeadingMedium>\n        </a>\n      </Link>\n      <DropdownArea>\n        <DropdownButton onClick={e => setDropdownOpen(!dropdownOpen)}>\n          <DropdownCaret />\n        </DropdownButton>\n        <DropdownList open={dropdownOpen}>\n          {animations.map(item => (\n            <Link href={`/${item.animationKey}`}>\n              <a>\n                <PageLink>{item.animationName}</PageLink>\n              </a>\n            </Link>\n          ))}\n        </DropdownList>\n      </DropdownArea>\n    </NavigationBar>\n  );\n};\n\nexport default Navigation;\n"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AACA;AAKA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AACA;AAKA;AAAA;AACA;AACA;AAFA;AAAA;AACA;AAIA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AALA;AAAA;AACA;AASA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAAA;AACA;AAUA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AALA;AAAA;AACA;AAWA;AACA;AACA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AAWA;AACA;AACA;;;;A","sourceRoot":""}