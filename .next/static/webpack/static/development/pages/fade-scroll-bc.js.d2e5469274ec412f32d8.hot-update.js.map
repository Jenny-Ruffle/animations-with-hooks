{"version":3,"file":"static/webpack/static/development/pages/fade-scroll-bc.js.d2e5469274ec412f32d8.hot-update.js","sources":["webpack:///./data/index.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty.js"],"sourcesContent":["export const animationData = [\n  {\n    animationName: \"Fade in on scroll\",\n    animationDescription: \"Using intersection observer\",\n    animationKey: \"fade-scroll-io\",\n    navigationName: \"Fade in | Intersection Observer\",\n    key: \"1\"\n  },\n  {\n    animationName: \"Fade in on scroll\",\n    animationDescription: \"Using bounding client\",\n    animationKey: \"fade-scroll-bc\",\n    navigationName: \"Fade in | Bounding Client\",\n    key: \"2\"\n  },\n  {\n    animationName: \"Grow/Shrink in on scroll\",\n    animationDescription: \"Using intersection observer\",\n    animationKey: \"size-scroll-io\",\n    navigationName: \"Grow/Shrink | Intersection Observer\",\n    key: \"3\"\n  },\n  {\n    animationName: \"Grow/Shrink in on scroll\",\n    animationDescription: \"Using bounding client\",\n    animationKey: \"size-scroll-bc\",\n    navigationName: \"Grow/Shrink | Bounding Client\",\n    key: \"4\"\n  },\n  {\n    animationName: \"Parallax Image\",\n    animationDescription: \"Parallax Imagery, shifting behaviour on scroll\",\n    animationKey: \"parallax-image\",\n    navigationName: \"Parallax Image\",\n    key: \"5\"\n  },\n  {\n    animationName: \"Slide gallery\",\n    animationDescription: \"Overlapping slide behaviour using sticky\",\n    animationKey: \"slide-gallery\",\n    navigationName: \"Slide Gallery\",\n    key: \"6\"\n  },\n  {\n    animationName: \"Sticky carousel\",\n    animationDescription: \"Carousel behaviour with vertical numbered pips\",\n    animationKey: \"sticky-vertical-carousel\",\n    animationName: \"Sticky carousel\",\n    key: \"7\"\n  }\n];\n","import _Object$defineProperty from \"../../core-js/object/define-property\";\nexport default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    _Object$defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}"],"mappings":";;;;;;;;;;;;;;;;;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AA9CA;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;A","sourceRoot":""}