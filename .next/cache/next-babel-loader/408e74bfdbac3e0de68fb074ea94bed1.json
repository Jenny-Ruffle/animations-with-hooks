{"ast":null,"code":"var _jsxFileName = \"/Users/j.ruffle/GithubProjects/animations-with-hooks/components/ResizeBC/index.js\";\nvar __jsx = React.createElement;\nimport React, { useRef } from \"react\";\nimport { createComponent } from \"react-fela\"; // import Image from \"../../data/images/CH.jpg\";\n\nimport getScreenHeight from \"../../utils/getScreenHeight\";\nimport getBoundingClient from \"../../utils/getBoundingClient\";\n\nvar container = function container() {\n  return {\n    display: \"flex\",\n    margin: \"400px 0 600px\",\n    justifyContent: \"center\"\n  };\n};\n\nvar Container = createComponent(container, \"div\");\n\nvar imageContainer = function imageContainer(_ref) {\n  var _ref$width = _ref.width,\n      width = _ref$width === void 0 ? \"100%\" : _ref$width;\n  return {\n    width: width\n  };\n};\n\nvar ImageContainer = createComponent(imageContainer, \"div\", [\"innerRef\"]);\n\nvar styledImage = function styledImage() {\n  return {\n    width: \"100%\"\n  };\n};\n\nvar StyledImage = createComponent(styledImage, \"image\", [\"src\"]);\n\nvar styledBlock = function styledBlock() {\n  return {\n    width: \"100%\",\n    backgroundColor: \"blue\",\n    height: \"300px\"\n  };\n};\n\nvar StyledBlock = createComponent(styledBlock, \"div\");\n\nvar ImageWrapper = function ImageWrapper(_ref2) {\n  var children = _ref2.children;\n  var ref = useRef();\n  var boundingClient = getBoundingClient(ref);\n  var screenHeight = getScreenHeight().height;\n  var onScreenRatio = (boundingClient.top + boundingClient.height) / screenHeight;\n  var percentageChange = onScreenRatio < 1 ? onScreenRatio * 40 : 40;\n  var width = 60 + percentageChange;\n  return __jsx(ImageContainer, {\n    width: \"\".concat(width, \"%\"),\n    innerRef: ref,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, children);\n};\n\nvar ResizeBC = function ResizeBC() {\n  return __jsx(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, __jsx(ImageWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, __jsx(StyledBlock, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  })));\n};\n\nexport default ResizeBC;","map":{"version":3,"sources":["/Users/j.ruffle/GithubProjects/animations-with-hooks/components/ResizeBC/index.js"],"names":["React","useRef","createComponent","getScreenHeight","getBoundingClient","container","display","margin","justifyContent","Container","imageContainer","width","ImageContainer","styledImage","StyledImage","styledBlock","backgroundColor","height","StyledBlock","ImageWrapper","children","ref","boundingClient","screenHeight","onScreenRatio","top","percentageChange","ResizeBC"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,QAA8B,OAA9B;AACA,SAASC,eAAT,QAAgC,YAAhC,C,CACA;;AACA,OAAOC,eAAP,MAA4B,6BAA5B;AACA,OAAOC,iBAAP,MAA8B,+BAA9B;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY;AAAA,SAAO;AACvBC,IAAAA,OAAO,EAAE,MADc;AAEvBC,IAAAA,MAAM,EAAE,eAFe;AAGvBC,IAAAA,cAAc,EAAE;AAHO,GAAP;AAAA,CAAlB;;AAMA,IAAMC,SAAS,GAAGP,eAAe,CAACG,SAAD,EAAY,KAAZ,CAAjC;;AAEA,IAAMK,cAAc,GAAG,SAAjBA,cAAiB;AAAA,wBAAGC,KAAH;AAAA,MAAGA,KAAH,2BAAW,MAAX;AAAA,SAAyB;AAC9CA,IAAAA,KAAK,EAALA;AAD8C,GAAzB;AAAA,CAAvB;;AAIA,IAAMC,cAAc,GAAGV,eAAe,CAACQ,cAAD,EAAiB,KAAjB,EAAwB,CAAC,UAAD,CAAxB,CAAtC;;AAEA,IAAMG,WAAW,GAAG,SAAdA,WAAc;AAAA,SAAO;AACzBF,IAAAA,KAAK,EAAE;AADkB,GAAP;AAAA,CAApB;;AAIA,IAAMG,WAAW,GAAGZ,eAAe,CAACW,WAAD,EAAc,OAAd,EAAuB,CAAC,KAAD,CAAvB,CAAnC;;AAEA,IAAME,WAAW,GAAG,SAAdA,WAAc;AAAA,SAAO;AACzBJ,IAAAA,KAAK,EAAE,MADkB;AAEzBK,IAAAA,eAAe,EAAE,MAFQ;AAGzBC,IAAAA,MAAM,EAAE;AAHiB,GAAP;AAAA,CAApB;;AAMA,IAAMC,WAAW,GAAGhB,eAAe,CAACa,WAAD,EAAc,KAAd,CAAnC;;AAEA,IAAMI,YAAY,GAAG,SAAfA,YAAe,QAAkB;AAAA,MAAfC,QAAe,SAAfA,QAAe;AACrC,MAAMC,GAAG,GAAGpB,MAAM,EAAlB;AACA,MAAMqB,cAAc,GAAGlB,iBAAiB,CAACiB,GAAD,CAAxC;AACA,MAAME,YAAY,GAAGpB,eAAe,GAAGc,MAAvC;AACA,MAAMO,aAAa,GACjB,CAACF,cAAc,CAACG,GAAf,GAAqBH,cAAc,CAACL,MAArC,IAA+CM,YADjD;AAEA,MAAMG,gBAAgB,GAAGF,aAAa,GAAG,CAAhB,GAAoBA,aAAa,GAAG,EAApC,GAAyC,EAAlE;AACA,MAAMb,KAAK,GAAG,KAAKe,gBAAnB;AACA,SACE,MAAC,cAAD;AAAgB,IAAA,KAAK,YAAKf,KAAL,MAArB;AAAoC,IAAA,QAAQ,EAAEU,GAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,QADH,CADF;AAKD,CAbD;;AAeA,IAAMO,QAAQ,GAAG,SAAXA,QAAW,GAAM;AACrB,SACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF;AAOD,CARD;;AAUA,eAAeA,QAAf","sourcesContent":["import React, { useRef } from \"react\";\nimport { createComponent } from \"react-fela\";\n// import Image from \"../../data/images/CH.jpg\";\nimport getScreenHeight from \"../../utils/getScreenHeight\";\nimport getBoundingClient from \"../../utils/getBoundingClient\";\n\nconst container = () => ({\n  display: \"flex\",\n  margin: \"400px 0 600px\",\n  justifyContent: \"center\"\n});\n\nconst Container = createComponent(container, \"div\");\n\nconst imageContainer = ({ width = \"100%\" }) => ({\n  width\n});\n\nconst ImageContainer = createComponent(imageContainer, \"div\", [\"innerRef\"]);\n\nconst styledImage = () => ({\n  width: \"100%\"\n});\n\nconst StyledImage = createComponent(styledImage, \"image\", [\"src\"]);\n\nconst styledBlock = () => ({\n  width: \"100%\",\n  backgroundColor: \"blue\",\n  height: \"300px\"\n});\n\nconst StyledBlock = createComponent(styledBlock, \"div\");\n\nconst ImageWrapper = ({ children }) => {\n  const ref = useRef();\n  const boundingClient = getBoundingClient(ref);\n  const screenHeight = getScreenHeight().height;\n  const onScreenRatio =\n    (boundingClient.top + boundingClient.height) / screenHeight;\n  const percentageChange = onScreenRatio < 1 ? onScreenRatio * 40 : 40;\n  const width = 60 + percentageChange;\n  return (\n    <ImageContainer width={`${width}%`} innerRef={ref}>\n      {children}\n    </ImageContainer>\n  );\n};\n\nconst ResizeBC = () => {\n  return (\n    <Container>\n      <ImageWrapper>\n        <StyledBlock />\n      </ImageWrapper>\n    </Container>\n  );\n};\n\nexport default ResizeBC;\n"]},"metadata":{},"sourceType":"module"}