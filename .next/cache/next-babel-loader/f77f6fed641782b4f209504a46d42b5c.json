{"ast":null,"code":"var _jsxFileName = \"/Users/j.ruffle/GithubProjects/animations-with-hooks/components/nav.js\";\nvar __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport { createComponent } from \"react-fela\";\nimport Link from \"next/link\";\nimport { HeadingMedium } from \"./StyledText\";\n\nvar navigationBar = function navigationBar(_ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? \"black\" : _ref$color;\n  return {\n    display: \"flex\"\n  };\n};\n\nvar NavigationBar = createComponent(navigationBar, \"nav\");\n\nvar dropdownArea = function dropdownArea(_ref2) {\n  var _ref2$color = _ref2.color,\n      color = _ref2$color === void 0 ? \"black\" : _ref2$color;\n  return {\n    \"float\": \"left\",\n    overflow: \"hidden\"\n  };\n};\n\nvar DropdownArea = createComponent(dropdownArea, \"nav\");\n\nvar Navigation = function Navigation(_ref3) {\n  var animations = _ref3.animations;\n  return __jsx(NavigationBar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, __jsx(HeadingMedium, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, \"Animation Library \"), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, __jsx(\"button\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \" V \"), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, animations.map(function (item) {\n    return __jsx(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, __jsx(Link, {\n      href: \"/\".concat(item.animationKey),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, item.animationName));\n  }))));\n};\n\nexport default Navigation;","map":{"version":3,"sources":["/Users/j.ruffle/GithubProjects/animations-with-hooks/components/nav.js"],"names":["React","useState","createComponent","Link","HeadingMedium","navigationBar","color","display","NavigationBar","dropdownArea","overflow","DropdownArea","Navigation","animations","map","item","animationKey","animationName"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,eAAT,QAAgC,YAAhC;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,aAAT,QAA8B,cAA9B;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB;AAAA,wBAAGC,KAAH;AAAA,MAAGA,KAAH,2BAAW,OAAX;AAAA,SAA0B;AAC9CC,IAAAA,OAAO,EAAE;AADqC,GAA1B;AAAA,CAAtB;;AAIA,IAAMC,aAAa,GAAGN,eAAe,CAACG,aAAD,EAAgB,KAAhB,CAArC;;AAEA,IAAMI,YAAY,GAAG,SAAfA,YAAe;AAAA,0BAAGH,KAAH;AAAA,MAAGA,KAAH,4BAAW,OAAX;AAAA,SAA0B;AAC7C,aAAO,MADsC;AAE7CI,IAAAA,QAAQ,EAAE;AAFmC,GAA1B;AAAA,CAArB;;AAKA,IAAMC,YAAY,GAAGT,eAAe,CAACO,YAAD,EAAe,KAAf,CAApC;;AAEA,IAAMG,UAAU,GAAG,SAAbA,UAAa;AAAA,MAAGC,UAAH,SAAGA,UAAH;AAAA,SACjB,MAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,UAAU,CAACC,GAAX,CAAe,UAAAC,IAAI;AAAA,WAClB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAM,MAAA,IAAI,aAAMA,IAAI,CAACC,YAAX,CAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAsCD,IAAI,CAACE,aAA3C,CADF,CADkB;AAAA,GAAnB,CADH,CAFF,CAFF,CADiB;AAAA,CAAnB;;AAgBA,eAAeL,UAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { createComponent } from \"react-fela\";\nimport Link from \"next/link\";\nimport { HeadingMedium } from \"./StyledText\";\n\nconst navigationBar = ({ color = \"black\" }) => ({\n  display: \"flex\"\n});\n\nconst NavigationBar = createComponent(navigationBar, \"nav\");\n\nconst dropdownArea = ({ color = \"black\" }) => ({\n  float: \"left\",\n  overflow: \"hidden\"\n});\n\nconst DropdownArea = createComponent(dropdownArea, \"nav\");\n\nconst Navigation = ({ animations }) => (\n  <NavigationBar>\n    <HeadingMedium>Animation Library </HeadingMedium>\n    <div>\n      <button> V </button>\n      <div>\n        {animations.map(item => (\n          <li>\n            <Link href={`/${item.animationKey}`}>{item.animationName}</Link>\n          </li>\n        ))}\n      </div>\n    </div>\n  </NavigationBar>\n);\n\nexport default Navigation;\n"]},"metadata":{},"sourceType":"module"}