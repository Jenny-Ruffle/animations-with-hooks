{"ast":null,"code":"var _jsxFileName = \"/Users/j.ruffle/GithubProjects/animations-with-hooks/components/nav.js\";\nvar __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport { createComponent } from \"react-fela\";\nimport Link from \"next/link\";\nimport { HeadingMedium } from \"./StyledText\";\n\nconst navigationBar = () => ({\n  display: \"flex\"\n});\n\nconst NavigationBar = createComponent(navigationBar, \"nav\");\n\nconst dropdownArea = () => ({\n  float: \"left\",\n  overflow: \"hidden\"\n});\n\nconst DropdownArea = createComponent(dropdownArea, \"div\");\n\nconst dropdownButton = () => ({\n  border: \"none\",\n  outline: \"none\",\n  \":hover\": {\n    cursor: \"pointer\"\n  }\n});\n\nconst DropdownButton = createComponent(dropdownButton, \"button\");\n\nconst dropdownList = () => ({\n  display: \"flex\",\n  flexDirection: \"column\",\n  position: \"absolute\",\n  backgroundColor: \"white\",\n  minWidth: \"250px\",\n  boxShadow: \"0px 8px 16px 0px rgba(0,0,0,0.2)\",\n  zIndex: 20\n});\n\nconst DropdownList = createComponent(dropdownList, \"div\");\n\nconst Navigation = ({\n  animations\n}) => __jsx(NavigationBar, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 44\n  },\n  __self: this\n}, __jsx(HeadingMedium, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 45\n  },\n  __self: this\n}, \"Animation Library \"), __jsx(DropdownArea, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 46\n  },\n  __self: this\n}, __jsx(DropdownButton, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 47\n  },\n  __self: this\n}, \" V \"), __jsx(DropdownList, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 48\n  },\n  __self: this\n}, animations.map(item => __jsx(Link, {\n  href: `/${item.animationKey}`,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 50\n  },\n  __self: this\n}, item.animationName)))));\n\nexport default Navigation;","map":{"version":3,"sources":["/Users/j.ruffle/GithubProjects/animations-with-hooks/components/nav.js"],"names":["React","useState","createComponent","Link","HeadingMedium","navigationBar","display","NavigationBar","dropdownArea","float","overflow","DropdownArea","dropdownButton","border","outline","cursor","DropdownButton","dropdownList","flexDirection","position","backgroundColor","minWidth","boxShadow","zIndex","DropdownList","Navigation","animations","map","item","animationKey","animationName"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,eAAT,QAAgC,YAAhC;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,aAAT,QAA8B,cAA9B;;AAEA,MAAMC,aAAa,GAAG,OAAO;AAC3BC,EAAAA,OAAO,EAAE;AADkB,CAAP,CAAtB;;AAIA,MAAMC,aAAa,GAAGL,eAAe,CAACG,aAAD,EAAgB,KAAhB,CAArC;;AAEA,MAAMG,YAAY,GAAG,OAAO;AAC1BC,EAAAA,KAAK,EAAE,MADmB;AAE1BC,EAAAA,QAAQ,EAAE;AAFgB,CAAP,CAArB;;AAKA,MAAMC,YAAY,GAAGT,eAAe,CAACM,YAAD,EAAe,KAAf,CAApC;;AAEA,MAAMI,cAAc,GAAG,OAAO;AAC5BC,EAAAA,MAAM,EAAE,MADoB;AAE5BC,EAAAA,OAAO,EAAE,MAFmB;AAG5B,YAAU;AACRC,IAAAA,MAAM,EAAE;AADA;AAHkB,CAAP,CAAvB;;AAQA,MAAMC,cAAc,GAAGd,eAAe,CAACU,cAAD,EAAiB,QAAjB,CAAtC;;AAEA,MAAMK,YAAY,GAAG,OAAO;AAC1BX,EAAAA,OAAO,EAAE,MADiB;AAE1BY,EAAAA,aAAa,EAAE,QAFW;AAG1BC,EAAAA,QAAQ,EAAE,UAHgB;AAI1BC,EAAAA,eAAe,EAAE,OAJS;AAK1BC,EAAAA,QAAQ,EAAE,OALgB;AAM1BC,EAAAA,SAAS,EAAE,kCANe;AAO1BC,EAAAA,MAAM,EAAE;AAPkB,CAAP,CAArB;;AAUA,MAAMC,YAAY,GAAGtB,eAAe,CAACe,YAAD,EAAe,KAAf,CAApC;;AAIA,MAAMQ,UAAU,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KACjB,MAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,MAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,EAEE,MAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,MAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADF,EAEE,MAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACGA,UAAU,CAACC,GAAX,CAAeC,IAAI,IAClB,MAAC,IAAD;AAAM,EAAA,IAAI,EAAG,IAAGA,IAAI,CAACC,YAAa,EAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAsCD,IAAI,CAACE,aAA3C,CADD,CADH,CAFF,CAFF,CADF;;AAcA,eAAeL,UAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { createComponent } from \"react-fela\";\nimport Link from \"next/link\";\nimport { HeadingMedium } from \"./StyledText\";\n\nconst navigationBar = () => ({\n  display: \"flex\"\n});\n\nconst NavigationBar = createComponent(navigationBar, \"nav\");\n\nconst dropdownArea = () => ({\n  float: \"left\",\n  overflow: \"hidden\"\n});\n\nconst DropdownArea = createComponent(dropdownArea, \"div\");\n\nconst dropdownButton = () => ({\n  border: \"none\",\n  outline: \"none\",\n  \":hover\": {\n    cursor: \"pointer\"\n  }\n});\n\nconst DropdownButton = createComponent(dropdownButton, \"button\");\n\nconst dropdownList = () => ({\n  display: \"flex\",\n  flexDirection: \"column\",\n  position: \"absolute\",\n  backgroundColor: \"white\",\n  minWidth: \"250px\",\n  boxShadow: \"0px 8px 16px 0px rgba(0,0,0,0.2)\",\n  zIndex: 20\n});\n\nconst DropdownList = createComponent(dropdownList, \"div\");\n\n\n\nconst Navigation = ({ animations }) => (\n  <NavigationBar>\n    <HeadingMedium>Animation Library </HeadingMedium>\n    <DropdownArea>\n      <DropdownButton> V </DropdownButton>\n      <DropdownList>\n        {animations.map(item => (\n          <Link href={`/${item.animationKey}`}>{item.animationName}</Link>\n        ))}\n      </DropdownList>\n    </DropdownArea>\n  </NavigationBar>\n);\n\nexport default Navigation;\n"]},"metadata":{},"sourceType":"module"}