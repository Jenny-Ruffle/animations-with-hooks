{"ast":null,"code":"var _jsxFileName = \"/Users/j.ruffle/GithubProjects/animations-with-hooks/components/FadeBC/index.js\";\nvar __jsx = React.createElement;\nimport React, { useRef } from \"react\";\nimport { createComponent } from \"react-fela\";\nimport Image from \"../../data/images/CH.jpg\";\nimport getScreenHeight from \"../../utils/getScreenHeight\";\nimport getBoundingClient from \"../../utils/getBoundingClient\";\n\nconst container = () => ({\n  display: \"flex\",\n  margin: \"10px 100px\",\n  justifyContent: \"center\"\n});\n\nconst Container = createComponent(container, \"div\");\n\nconst imageContainer = ({\n  opacity = \"1\"\n}) => ({\n  opacity,\n  width: \"100%\"\n});\n\nconst ImageContainer = createComponent(imageContainer, \"div\", [\"innerRef\"]);\n\nconst styledImage = () => ({\n  width: \"100%\"\n});\n\nconst StyledImage = createComponent(styledImage, \"img\", [\"src\"]);\n\nconst getFadeOutOpacity = (boundingClient, screenHeight) => {\n  const onScreenRatio = (boundingClient.top + boundingClient.height) / screenHeight;\n  const percentageChange = onScreenRatio < 1 ? onScreenRatio * 3 : 0.3;\n  return 0.7 + percentageChange;\n};\n\nconst getFadeInOpacity = (boundingClient, screenHeight) => {\n  console.log(boundingClient.top, \"bottom\", screenHeight, \"height of screen\");\n  const onScreenRatio = boundingClient.top / screenHeight;\n  const percentageChange = onScreenRatio < 1 ? onScreenRatio * 3 : 0.3;\n  return 0.3 - percentageChange;\n};\n\nconst ImageWrapper = ({\n  children,\n  fadeIn\n}) => {\n  const ref = useRef();\n  const boundingClient = getBoundingClient(ref);\n  const screenHeight = getScreenHeight().height;\n  const opacity = fadeIn ? getFadeInOpacity(boundingClient, screenHeight) : getFadeOutOpacity(boundingClient, screenHeight);\n  return __jsx(ImageContainer, {\n    opacity: `${opacity}%`,\n    innerRef: ref,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, children);\n};\n\nconst FadeBC = ({\n  fadeIn\n}) => {\n  return __jsx(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, __jsx(ImageWrapper, {\n    fadeIn: fadeIn,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, __jsx(StyledImage, {\n    src: Image,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  })));\n};\n\nexport default FadeBC;","map":{"version":3,"sources":["/Users/j.ruffle/GithubProjects/animations-with-hooks/components/FadeBC/index.js"],"names":["React","useRef","createComponent","Image","getScreenHeight","getBoundingClient","container","display","margin","justifyContent","Container","imageContainer","opacity","width","ImageContainer","styledImage","StyledImage","getFadeOutOpacity","boundingClient","screenHeight","onScreenRatio","top","height","percentageChange","getFadeInOpacity","console","log","ImageWrapper","children","fadeIn","ref","FadeBC"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,QAA8B,OAA9B;AACA,SAASC,eAAT,QAAgC,YAAhC;AACA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,OAAOC,eAAP,MAA4B,6BAA5B;AACA,OAAOC,iBAAP,MAA8B,+BAA9B;;AAEA,MAAMC,SAAS,GAAG,OAAO;AACvBC,EAAAA,OAAO,EAAE,MADc;AAEvBC,EAAAA,MAAM,EAAE,YAFe;AAGvBC,EAAAA,cAAc,EAAE;AAHO,CAAP,CAAlB;;AAMA,MAAMC,SAAS,GAAGR,eAAe,CAACI,SAAD,EAAY,KAAZ,CAAjC;;AAEA,MAAMK,cAAc,GAAG,CAAC;AAAEC,EAAAA,OAAO,GAAG;AAAZ,CAAD,MAAwB;AAC7CA,EAAAA,OAD6C;AAE7CC,EAAAA,KAAK,EAAE;AAFsC,CAAxB,CAAvB;;AAKA,MAAMC,cAAc,GAAGZ,eAAe,CAACS,cAAD,EAAiB,KAAjB,EAAwB,CAAC,UAAD,CAAxB,CAAtC;;AAEA,MAAMI,WAAW,GAAG,OAAO;AACzBF,EAAAA,KAAK,EAAE;AADkB,CAAP,CAApB;;AAIA,MAAMG,WAAW,GAAGd,eAAe,CAACa,WAAD,EAAc,KAAd,EAAqB,CAAC,KAAD,CAArB,CAAnC;;AAEA,MAAME,iBAAiB,GAAG,CAACC,cAAD,EAAiBC,YAAjB,KAAkC;AAC1D,QAAMC,aAAa,GACjB,CAACF,cAAc,CAACG,GAAf,GAAqBH,cAAc,CAACI,MAArC,IAA+CH,YADjD;AAEA,QAAMI,gBAAgB,GAAGH,aAAa,GAAG,CAAhB,GAAoBA,aAAa,GAAG,CAApC,GAAwC,GAAjE;AACA,SAAO,MAAMG,gBAAb;AACD,CALD;;AAOA,MAAMC,gBAAgB,GAAG,CAACN,cAAD,EAAiBC,YAAjB,KAAkC;AACzDM,EAAAA,OAAO,CAACC,GAAR,CAAYR,cAAc,CAACG,GAA3B,EAAgC,QAAhC,EAA0CF,YAA1C,EAAwD,kBAAxD;AAEA,QAAMC,aAAa,GAAGF,cAAc,CAACG,GAAf,GAAqBF,YAA3C;AACA,QAAMI,gBAAgB,GAAGH,aAAa,GAAG,CAAhB,GAAoBA,aAAa,GAAG,CAApC,GAAwC,GAAjE;AACA,SAAO,MAAMG,gBAAb;AACD,CAND;;AAQA,MAAMI,YAAY,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAD,KAA0B;AAC7C,QAAMC,GAAG,GAAG7B,MAAM,EAAlB;AACA,QAAMiB,cAAc,GAAGb,iBAAiB,CAACyB,GAAD,CAAxC;AACA,QAAMX,YAAY,GAAGf,eAAe,GAAGkB,MAAvC;AACA,QAAMV,OAAO,GAAGiB,MAAM,GAClBL,gBAAgB,CAACN,cAAD,EAAiBC,YAAjB,CADE,GAElBF,iBAAiB,CAACC,cAAD,EAAiBC,YAAjB,CAFrB;AAGA,SACE,MAAC,cAAD;AAAgB,IAAA,OAAO,EAAG,GAAEP,OAAQ,GAApC;AAAwC,IAAA,QAAQ,EAAEkB,GAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,QADH,CADF;AAKD,CAZD;;AAcA,MAAMG,MAAM,GAAG,CAAC;AAAEF,EAAAA;AAAF,CAAD,KAAgB;AAC7B,SACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,YAAD;AAAc,IAAA,MAAM,EAAEA,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,WAAD;AAAa,IAAA,GAAG,EAAE1B,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF;AAOD,CARD;;AAUA,eAAe4B,MAAf","sourcesContent":["import React, { useRef } from \"react\";\nimport { createComponent } from \"react-fela\";\nimport Image from \"../../data/images/CH.jpg\";\nimport getScreenHeight from \"../../utils/getScreenHeight\";\nimport getBoundingClient from \"../../utils/getBoundingClient\";\n\nconst container = () => ({\n  display: \"flex\",\n  margin: \"10px 100px\",\n  justifyContent: \"center\"\n});\n\nconst Container = createComponent(container, \"div\");\n\nconst imageContainer = ({ opacity = \"1\" }) => ({\n  opacity,\n  width: \"100%\"\n});\n\nconst ImageContainer = createComponent(imageContainer, \"div\", [\"innerRef\"]);\n\nconst styledImage = () => ({\n  width: \"100%\"\n});\n\nconst StyledImage = createComponent(styledImage, \"img\", [\"src\"]);\n\nconst getFadeOutOpacity = (boundingClient, screenHeight) => {\n  const onScreenRatio =\n    (boundingClient.top + boundingClient.height) / screenHeight;\n  const percentageChange = onScreenRatio < 1 ? onScreenRatio * 3 : 0.3;\n  return 0.7 + percentageChange;\n};\n\nconst getFadeInOpacity = (boundingClient, screenHeight) => {\n  console.log(boundingClient.top, \"bottom\", screenHeight, \"height of screen\");\n\n  const onScreenRatio = boundingClient.top / screenHeight;\n  const percentageChange = onScreenRatio < 1 ? onScreenRatio * 3 : 0.3;\n  return 0.3 - percentageChange;\n};\n\nconst ImageWrapper = ({ children, fadeIn }) => {\n  const ref = useRef();\n  const boundingClient = getBoundingClient(ref);\n  const screenHeight = getScreenHeight().height;\n  const opacity = fadeIn\n    ? getFadeInOpacity(boundingClient, screenHeight)\n    : getFadeOutOpacity(boundingClient, screenHeight);\n  return (\n    <ImageContainer opacity={`${opacity}%`} innerRef={ref}>\n      {children}\n    </ImageContainer>\n  );\n};\n\nconst FadeBC = ({ fadeIn }) => {\n  return (\n    <Container>\n      <ImageWrapper fadeIn={fadeIn}>\n        <StyledImage src={Image} />\n      </ImageWrapper>\n    </Container>\n  );\n};\n\nexport default FadeBC;\n"]},"metadata":{},"sourceType":"module"}