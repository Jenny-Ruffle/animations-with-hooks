{"ast":null,"code":"var _jsxFileName = \"/Users/j.ruffle/GithubProjects/animations-with-hooks/components/ResizeBC/index.js\";\nvar __jsx = React.createElement;\nimport React, { useRef } from \"react\";\nimport { createComponent } from \"react-fela\";\nimport Image from \"../../data/images/CH.jpg\";\nimport getScreenHeight from \"../../utils/getScreenHeight\";\nimport getBoundingClient from \"../../utils/getBoundingClient\";\n\nconst container = () => ({\n  display: \"flex\",\n  margin: \"400px 200px 200px\",\n  justifyContent: \"center\"\n});\n\nconst Container = createComponent(container, \"div\");\n\nconst imageContainer = ({\n  width = \"100%\"\n}) => ({\n  width\n});\n\nconst ImageContainer = createComponent(imageContainer, \"div\", [\"innerRef\"]);\n\nconst styledImage = () => ({\n  width: \"100%\"\n});\n\nconst StyledImage = createComponent(styledImage, \"img\", [\"src\"]);\n\nconst styledBlock = () => ({\n  width: \"100%\",\n  backgroundColor: \"blue\",\n  height: \"300px\"\n});\n\nconst StyledBlock = createComponent(styledBlock, \"div\");\n\nconst getShrinkingWidth = (boundingClient, screenHeight) => {\n  const onScreenRatio = (boundingClient.top + boundingClient.height) / screenHeight;\n  const percentageChange = onScreenRatio < 1 ? onScreenRatio * 30 : 30;\n  return 70 + percentageChange;\n};\n\nconst getGrowingWidth = (boundingClient, screenHeight) => {\n  const onScreenRatio = (boundingClient.top + boundingClient.height) / screenHeight;\n  const percentageChange = onScreenRatio < 1 ? onScreenRatio * 30 : 0;\n  console.log(percentageChange, \"hitting size func\");\n  return 100 - percentageChange;\n};\n\nconst ImageWrapper = ({\n  children,\n  grow\n}) => {\n  const ref = useRef();\n  const boundingClient = getBoundingClient(ref);\n  const screenHeight = getScreenHeight().height;\n  const width = grow ? getGrowingW : getShrinkingWidth(boundingClient, screenHeight);\n  return __jsx(ImageContainer, {\n    width: `${width}%`,\n    innerRef: ref,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, children);\n};\n\nconst ResizeBC = ({\n  grow\n}) => {\n  return __jsx(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, __jsx(ImageWrapper, {\n    grow: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, __jsx(StyledImage, {\n    src: Image,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  })));\n};\n\nexport default ResizeBC;","map":{"version":3,"sources":["/Users/j.ruffle/GithubProjects/animations-with-hooks/components/ResizeBC/index.js"],"names":["React","useRef","createComponent","Image","getScreenHeight","getBoundingClient","container","display","margin","justifyContent","Container","imageContainer","width","ImageContainer","styledImage","StyledImage","styledBlock","backgroundColor","height","StyledBlock","getShrinkingWidth","boundingClient","screenHeight","onScreenRatio","top","percentageChange","getGrowingWidth","console","log","ImageWrapper","children","grow","ref","getGrowingW","ResizeBC"],"mappings":"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","sourcesContent":["import React, { useRef } from \"react\";\nimport { createComponent } from \"react-fela\";\nimport Image from \"../../data/images/CH.jpg\";\nimport getScreenHeight from \"../../utils/getScreenHeight\";\nimport getBoundingClient from \"../../utils/getBoundingClient\";\n\nconst container = () => ({\n  display: \"flex\",\n  margin: \"400px 200px 200px\",\n  justifyContent: \"center\"\n});\n\nconst Container = createComponent(container, \"div\");\n\nconst imageContainer = ({ width = \"100%\" }) => ({\n  width\n});\n\nconst ImageContainer = createComponent(imageContainer, \"div\", [\"innerRef\"]);\n\nconst styledImage = () => ({\n  width: \"100%\"\n});\n\nconst StyledImage = createComponent(styledImage, \"img\", [\"src\"]);\n\nconst styledBlock = () => ({\n  width: \"100%\",\n  backgroundColor: \"blue\",\n  height: \"300px\"\n});\n\nconst StyledBlock = createComponent(styledBlock, \"div\");\n\nconst getShrinkingWidth = (boundingClient, screenHeight) => {\n  const onScreenRatio =\n    (boundingClient.top + boundingClient.height) / screenHeight;\n  const percentageChange = onScreenRatio < 1 ? onScreenRatio * 30 : 30;\n  return 70 + percentageChange;\n};\n\nconst getGrowingWidth = (boundingClient, screenHeight) => {\n  const onScreenRatio =\n    (boundingClient.top + boundingClient.height) / screenHeight;\n  const percentageChange = onScreenRatio < 1 ? onScreenRatio * 30 : 0;\n  console.log(percentageChange, \"hitting size func\");\n  return 100 - percentageChange;\n};\n\nconst ImageWrapper = ({ children, grow }) => {\n  const ref = useRef();\n  const boundingClient = getBoundingClient(ref);\n  const screenHeight = getScreenHeight().height;\n  const width = grow ? getGrowingW : getShrinkingWidth(boundingClient, screenHeight);\n  return (\n    <ImageContainer width={`${width}%`} innerRef={ref}>\n      {children}\n    </ImageContainer>\n  );\n};\n\nconst ResizeBC = ({ grow }) => {\n  return (\n    <Container>\n      <ImageWrapper grow>\n        <StyledImage src={Image} />\n      </ImageWrapper>\n    </Container>\n  );\n};\n\nexport default ResizeBC;\n"]},"metadata":{},"sourceType":"module"}