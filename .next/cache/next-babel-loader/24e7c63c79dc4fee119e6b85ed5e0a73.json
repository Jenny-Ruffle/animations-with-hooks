{"ast":null,"code":"var _jsxFileName = \"/Users/j.ruffle/GithubProjects/animations-with-hooks/components/ResizeBC/index.js\";\nvar __jsx = React.createElement;\nimport React, { useRef } from \"react\";\nimport { createComponent } from \"react-fela\";\nimport getScreenHeight from \"../../utils/getScreenHeight\";\nimport getBoundingClient from \"../../utils/getBoundingClient\";\n\nvar container = function container() {\n  return {\n    display: \"flex\",\n    margin: \"10px 100px\",\n    justifyContent: \"center\"\n  };\n};\n\nvar Container = createComponent(container, \"div\");\n\nvar imageContainer = function imageContainer(_ref) {\n  var _ref$width = _ref.width,\n      width = _ref$width === void 0 ? \"100%\" : _ref$width;\n  return {\n    width: width\n  };\n};\n\nvar ImageContainer = createComponent(imageContainer, \"div\", [\"innerRef\"]);\n\nvar styledImage = function styledImage() {\n  return {\n    width: \"100%\"\n  };\n};\n\nvar StyledImage = createComponent(styledImage, \"img\", [\"src\"]);\n\nvar getShrinkingWidth = function getShrinkingWidth(boundingClient, screenHeight) {\n  var onScreenRatio = (boundingClient.top + boundingClient.height) / screenHeight;\n  var percentageChange = onScreenRatio < 1 ? onScreenRatio * 30 : 30;\n  return 70 + percentageChange;\n};\n\nvar getGrowingWidth = function getGrowingWidth(boundingClient, screenHeight) {\n  var onScreenRatio = boundingClient.top / screenHeight;\n  var percentageChange = onScreenRatio < 1 ? onScreenRatio * 30 : 30;\n  return 100 - percentageChange;\n};\n\nvar ImageWrapper = function ImageWrapper(_ref2) {\n  var children = _ref2.children,\n      grow = _ref2.grow;\n  var ref = useRef();\n  var boundingClient = getBoundingClient(ref);\n  var screenHeight = getScreenHeight().height;\n  var width = grow ? getGrowingWidth(boundingClient, screenHeight) : getShrinkingWidth(boundingClient, screenHeight);\n  return __jsx(ImageContainer, {\n    width: \"\".concat(width, \"%\"),\n    innerRef: ref,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, children);\n};\n\nvar ResizeBC = function ResizeBC(_ref3) {\n  var grow = _ref3.grow,\n      src = _ref3.src;\n  return __jsx(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, __jsx(ImageWrapper, {\n    grow: grow,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, __jsx(StyledImage, {\n    src: src,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  })));\n};\n\nexport default ResizeBC;","map":{"version":3,"sources":["/Users/j.ruffle/GithubProjects/animations-with-hooks/components/ResizeBC/index.js"],"names":["React","useRef","createComponent","getScreenHeight","getBoundingClient","container","display","margin","justifyContent","Container","imageContainer","width","ImageContainer","styledImage","StyledImage","getShrinkingWidth","boundingClient","screenHeight","onScreenRatio","top","height","percentageChange","getGrowingWidth","ImageWrapper","children","grow","ref","ResizeBC","src"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,QAA8B,OAA9B;AACA,SAASC,eAAT,QAAgC,YAAhC;AACA,OAAOC,eAAP,MAA4B,6BAA5B;AACA,OAAOC,iBAAP,MAA8B,+BAA9B;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY;AAAA,SAAO;AACvBC,IAAAA,OAAO,EAAE,MADc;AAEvBC,IAAAA,MAAM,EAAE,YAFe;AAGvBC,IAAAA,cAAc,EAAE;AAHO,GAAP;AAAA,CAAlB;;AAMA,IAAMC,SAAS,GAAGP,eAAe,CAACG,SAAD,EAAY,KAAZ,CAAjC;;AAEA,IAAMK,cAAc,GAAG,SAAjBA,cAAiB;AAAA,wBAAGC,KAAH;AAAA,MAAGA,KAAH,2BAAW,MAAX;AAAA,SAAyB;AAC9CA,IAAAA,KAAK,EAALA;AAD8C,GAAzB;AAAA,CAAvB;;AAIA,IAAMC,cAAc,GAAGV,eAAe,CAACQ,cAAD,EAAiB,KAAjB,EAAwB,CAAC,UAAD,CAAxB,CAAtC;;AAEA,IAAMG,WAAW,GAAG,SAAdA,WAAc;AAAA,SAAO;AACzBF,IAAAA,KAAK,EAAE;AADkB,GAAP;AAAA,CAApB;;AAIA,IAAMG,WAAW,GAAGZ,eAAe,CAACW,WAAD,EAAc,KAAd,EAAqB,CAAC,KAAD,CAArB,CAAnC;;AAEA,IAAME,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,cAAD,EAAiBC,YAAjB,EAAkC;AAC1D,MAAMC,aAAa,GACjB,CAACF,cAAc,CAACG,GAAf,GAAqBH,cAAc,CAACI,MAArC,IAA+CH,YADjD;AAEA,MAAMI,gBAAgB,GAAGH,aAAa,GAAG,CAAhB,GAAoBA,aAAa,GAAG,EAApC,GAAyC,EAAlE;AACA,SAAO,KAAKG,gBAAZ;AACD,CALD;;AAOA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACN,cAAD,EAAiBC,YAAjB,EAAkC;AACxD,MAAMC,aAAa,GAAGF,cAAc,CAACG,GAAf,GAAqBF,YAA3C;AACA,MAAMI,gBAAgB,GAAGH,aAAa,GAAG,CAAhB,GAAoBA,aAAa,GAAG,EAApC,GAAyC,EAAlE;AACA,SAAO,MAAMG,gBAAb;AACD,CAJD;;AAMA,IAAME,YAAY,GAAG,SAAfA,YAAe,QAAwB;AAAA,MAArBC,QAAqB,SAArBA,QAAqB;AAAA,MAAXC,IAAW,SAAXA,IAAW;AAC3C,MAAMC,GAAG,GAAGzB,MAAM,EAAlB;AACA,MAAMe,cAAc,GAAGZ,iBAAiB,CAACsB,GAAD,CAAxC;AACA,MAAMT,YAAY,GAAGd,eAAe,GAAGiB,MAAvC;AACA,MAAMT,KAAK,GAAGc,IAAI,GACdH,eAAe,CAACN,cAAD,EAAiBC,YAAjB,CADD,GAEdF,iBAAiB,CAACC,cAAD,EAAiBC,YAAjB,CAFrB;AAGA,SACE,MAAC,cAAD;AAAgB,IAAA,KAAK,YAAKN,KAAL,MAArB;AAAoC,IAAA,QAAQ,EAAEe,GAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,QADH,CADF;AAKD,CAZD;;AAcA,IAAMG,QAAQ,GAAG,SAAXA,QAAW,QAAmB;AAAA,MAAhBF,IAAgB,SAAhBA,IAAgB;AAAA,MAAVG,GAAU,SAAVA,GAAU;AAClC,SACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,YAAD;AAAc,IAAA,IAAI,EAAEH,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,WAAD;AAAa,IAAA,GAAG,EAAEG,GAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF;AAOD,CARD;;AAUA,eAAeD,QAAf","sourcesContent":["import React, { useRef } from \"react\";\nimport { createComponent } from \"react-fela\";\nimport getScreenHeight from \"../../utils/getScreenHeight\";\nimport getBoundingClient from \"../../utils/getBoundingClient\";\n\nconst container = () => ({\n  display: \"flex\",\n  margin: \"10px 100px\",\n  justifyContent: \"center\"\n});\n\nconst Container = createComponent(container, \"div\");\n\nconst imageContainer = ({ width = \"100%\" }) => ({\n  width\n});\n\nconst ImageContainer = createComponent(imageContainer, \"div\", [\"innerRef\"]);\n\nconst styledImage = () => ({\n  width: \"100%\"\n});\n\nconst StyledImage = createComponent(styledImage, \"img\", [\"src\"]);\n\nconst getShrinkingWidth = (boundingClient, screenHeight) => {\n  const onScreenRatio =\n    (boundingClient.top + boundingClient.height) / screenHeight;\n  const percentageChange = onScreenRatio < 1 ? onScreenRatio * 30 : 30;\n  return 70 + percentageChange;\n};\n\nconst getGrowingWidth = (boundingClient, screenHeight) => {\n  const onScreenRatio = boundingClient.top / screenHeight;\n  const percentageChange = onScreenRatio < 1 ? onScreenRatio * 30 : 30;\n  return 100 - percentageChange;\n};\n\nconst ImageWrapper = ({ children, grow }) => {\n  const ref = useRef();\n  const boundingClient = getBoundingClient(ref);\n  const screenHeight = getScreenHeight().height;\n  const width = grow\n    ? getGrowingWidth(boundingClient, screenHeight)\n    : getShrinkingWidth(boundingClient, screenHeight);\n  return (\n    <ImageContainer width={`${width}%`} innerRef={ref}>\n      {children}\n    </ImageContainer>\n  );\n};\n\nconst ResizeBC = ({ grow, src }) => {\n  return (\n    <Container>\n      <ImageWrapper grow={grow}>\n        <StyledImage src={src} />\n      </ImageWrapper>\n    </Container>\n  );\n};\n\nexport default ResizeBC;\n"]},"metadata":{},"sourceType":"module"}