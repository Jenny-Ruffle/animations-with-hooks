{"ast":null,"code":"var _jsxFileName = \"/Users/j.ruffle/GithubProjects/animations-with-hooks/components/ResizeBC/index.js\";\nvar __jsx = React.createElement;\nimport React, { useRef } from \"react\";\nimport { createComponent } from \"react-fela\";\nimport Image from \"../../data/images/CH.jpg\";\nimport getScreenHeight from \"../../utils/getScreenHeight\";\nimport getBoundingClient from \"../../utils/getBoundingClient\";\n\nvar container = function container() {\n  return {\n    display: \"flex\",\n    margin: \"400px 200px 200px\",\n    justifyContent: \"center\"\n  };\n};\n\nvar Container = createComponent(container, \"div\");\n\nvar imageContainer = function imageContainer(_ref) {\n  var _ref$width = _ref.width,\n      width = _ref$width === void 0 ? \"100%\" : _ref$width;\n  return {\n    width: width\n  };\n};\n\nvar ImageContainer = createComponent(imageContainer, \"div\", [\"innerRef\"]);\n\nvar styledImage = function styledImage() {\n  return {\n    width: \"100%\"\n  };\n};\n\nvar StyledImage = createComponent(styledImage, \"img\", [\"src\"]);\n\nvar styledBlock = function styledBlock() {\n  return {\n    width: \"100%\",\n    backgroundColor: \"blue\",\n    height: \"300px\"\n  };\n};\n\nvar StyledBlock = createComponent(styledBlock, \"div\");\n\nvar getShrinkingWidth = function getShrinkingWidth(boundingClient, screenHeight) {\n  var onScreenRatio = (boundingClient.top + boundingClient.height) / screenHeight;\n  var percentageChange = onScreenRatio < 1 ? onScreenRatio * 30 : 30;\n  return 70 + percentageChange;\n};\n\nvar getGrowingWidth = function getGrowingWidth(boundingClient, screenHeight) {\n  var onScreenRatio = (boundingClient.top + boundingClient.height) / screenHeight;\n  var percentageChange = onScreenRatio < 1 ? onScreenRatio * 30 : 0;\n  console.log(percentageChange, \"hitting size func\");\n  return 100 - percentageChange;\n};\n\nvar ImageWrapper = function ImageWrapper(_ref2) {\n  var children = _ref2.children,\n      grow = _ref2.grow;\n  var ref = useRef();\n  var boundingClient = getBoundingClient(ref);\n  var screenHeight = getScreenHeight().height;\n  var width = grow ? getGrowingWidth(boundingClient, screenHeight) : getShrinkingWidth(boundingClient, screenHeight);\n  return __jsx(ImageContainer, {\n    width: \"\".concat(width, \"%\"),\n    innerRef: ref,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, children);\n};\n\nvar ResizeBC = function ResizeBC(_ref3) {\n  var grow = _ref3.grow;\n  return __jsx(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, __jsx(ImageWrapper, {\n    grow: grow,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, __jsx(StyledImage, {\n    src: Image,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  })));\n};\n\nexport default ResizeBC;","map":{"version":3,"sources":["/Users/j.ruffle/GithubProjects/animations-with-hooks/components/ResizeBC/index.js"],"names":["React","useRef","createComponent","Image","getScreenHeight","getBoundingClient","container","display","margin","justifyContent","Container","imageContainer","width","ImageContainer","styledImage","StyledImage","styledBlock","backgroundColor","height","StyledBlock","getShrinkingWidth","boundingClient","screenHeight","onScreenRatio","top","percentageChange","getGrowingWidth","console","log","ImageWrapper","children","grow","ref","ResizeBC"],"mappings":"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","sourcesContent":["import React, { useRef } from \"react\";\nimport { createComponent } from \"react-fela\";\nimport Image from \"../../data/images/CH.jpg\";\nimport getScreenHeight from \"../../utils/getScreenHeight\";\nimport getBoundingClient from \"../../utils/getBoundingClient\";\n\nconst container = () => ({\n  display: \"flex\",\n  margin: \"400px 200px 200px\",\n  justifyContent: \"center\"\n});\n\nconst Container = createComponent(container, \"div\");\n\nconst imageContainer = ({ width = \"100%\" }) => ({\n  width\n});\n\nconst ImageContainer = createComponent(imageContainer, \"div\", [\"innerRef\"]);\n\nconst styledImage = () => ({\n  width: \"100%\"\n});\n\nconst StyledImage = createComponent(styledImage, \"img\", [\"src\"]);\n\nconst styledBlock = () => ({\n  width: \"100%\",\n  backgroundColor: \"blue\",\n  height: \"300px\"\n});\n\nconst StyledBlock = createComponent(styledBlock, \"div\");\n\nconst getShrinkingWidth = (boundingClient, screenHeight) => {\n  const onScreenRatio =\n    (boundingClient.top + boundingClient.height) / screenHeight;\n  const percentageChange = onScreenRatio < 1 ? onScreenRatio * 30 : 30;\n  return 70 + percentageChange;\n};\n\nconst getGrowingWidth = (boundingClient, screenHeight) => {\n  const onScreenRatio =\n    (boundingClient.top + boundingClient.height) / screenHeight;\n  const percentageChange = onScreenRatio < 1 ? (onScreenRatio) * 30 : 0;\n  console.log(percentageChange, \"hitting size func\");\n  return 100 - percentageChange;\n};\n\nconst ImageWrapper = ({ children, grow }) => {\n  const ref = useRef();\n  const boundingClient = getBoundingClient(ref);\n  const screenHeight = getScreenHeight().height;\n  const width = grow\n    ? getGrowingWidth(boundingClient, screenHeight)\n    : getShrinkingWidth(boundingClient, screenHeight);\n  return (\n    <ImageContainer width={`${width}%`} innerRef={ref}>\n      {children}\n    </ImageContainer>\n  );\n};\n\nconst ResizeBC = ({ grow }) => {\n  return (\n    <Container>\n      <ImageWrapper grow={grow}>\n        <StyledImage src={Image} />\n      </ImageWrapper>\n    </Container>\n  );\n};\n\nexport default ResizeBC;\n"]},"metadata":{},"sourceType":"module"}