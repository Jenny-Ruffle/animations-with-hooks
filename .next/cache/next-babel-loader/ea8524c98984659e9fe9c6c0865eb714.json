{"ast":null,"code":"var _jsxFileName = \"/Users/j.ruffle/GithubProjects/animations-with-hooks/components/ResizeBC/index.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useLayoutEffect, useRef, useState } from \"react\";\nimport { createComponent } from \"react-fela\";\nimport throttle from \"lodash/fp/throttle\"; // import Image from \"../../data/images/CH.jpg\";\n\nimport getScreenHeight from \"../../utils/getScreenHeight\";\nimport getBoundingClient from \"../../utils/getBoundingClient\";\n\nconst imageContainer = ({\n  width = \"100%\"\n}) => ({\n  width,\n  marginTop: \"800px\",\n  marginBottom: \"800px\"\n});\n\nconst ImageContainer = createComponent(imageContainer, \"div\", [\"innerRef\"]);\n\nconst styledImage = () => ({\n  width: \"100%\"\n});\n\nconst StyledImage = createComponent(styledImage, \"image\", [\"src\"]);\n\nconst styledBlock = () => ({\n  width: \"100%\",\n  backgroundColor: \"blue\",\n  height: \"300px\"\n});\n\nconst StyledBlock = createComponent(styledBlock, \"div\");\n\nconst ImageWrapper = ({\n  children\n}) => {\n  const ref = useRef();\n  const boundingClient = getBoundingClient(ref);\n  const screenHeight = getScreenHeight().height;\n  const onScreenRatio = (boundingClient.top + boundingClient.height) / screenHeight;\n  const percentageChange = onSonScreenRatio * 30;\n  const width = 70 + percentageChange;\n  return __jsx(ImageContainer, {\n    width: `${width}%`,\n    innerRef: ref,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, children);\n};\n\nconst ResizeBC = () => {\n  return __jsx(ImageWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, __jsx(StyledBlock, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }));\n};\n\nexport default ResizeBC;","map":{"version":3,"sources":["/Users/j.ruffle/GithubProjects/animations-with-hooks/components/ResizeBC/index.js"],"names":["React","useEffect","useLayoutEffect","useRef","useState","createComponent","throttle","getScreenHeight","getBoundingClient","imageContainer","width","marginTop","marginBottom","ImageContainer","styledImage","StyledImage","styledBlock","backgroundColor","height","StyledBlock","ImageWrapper","children","ref","boundingClient","screenHeight","onScreenRatio","top","percentageChange","onSonScreenRatio","ResizeBC"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,eAA3B,EAA4CC,MAA5C,EAAoDC,QAApD,QAAoE,OAApE;AACA,SAASC,eAAT,QAAgC,YAAhC;AACA,OAAOC,QAAP,MAAqB,oBAArB,C,CAEA;;AACA,OAAOC,eAAP,MAA4B,6BAA5B;AACA,OAAOC,iBAAP,MAA8B,+BAA9B;;AAEA,MAAMC,cAAc,GAAG,CAAC;AAAEC,EAAAA,KAAK,GAAG;AAAV,CAAD,MAAyB;AAC9CA,EAAAA,KAD8C;AAE9CC,EAAAA,SAAS,EAAE,OAFmC;AAG9CC,EAAAA,YAAY,EAAE;AAHgC,CAAzB,CAAvB;;AAMA,MAAMC,cAAc,GAAGR,eAAe,CAACI,cAAD,EAAiB,KAAjB,EAAwB,CAAC,UAAD,CAAxB,CAAtC;;AAEA,MAAMK,WAAW,GAAG,OAAO;AACzBJ,EAAAA,KAAK,EAAE;AADkB,CAAP,CAApB;;AAIA,MAAMK,WAAW,GAAGV,eAAe,CAACS,WAAD,EAAc,OAAd,EAAuB,CAAC,KAAD,CAAvB,CAAnC;;AAEA,MAAME,WAAW,GAAG,OAAO;AACzBN,EAAAA,KAAK,EAAE,MADkB;AAEzBO,EAAAA,eAAe,EAAE,MAFQ;AAGzBC,EAAAA,MAAM,EAAE;AAHiB,CAAP,CAApB;;AAMA,MAAMC,WAAW,GAAGd,eAAe,CAACW,WAAD,EAAc,KAAd,CAAnC;;AAEA,MAAMI,YAAY,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AACrC,QAAMC,GAAG,GAAGnB,MAAM,EAAlB;AACA,QAAMoB,cAAc,GAAGf,iBAAiB,CAACc,GAAD,CAAxC;AACA,QAAME,YAAY,GAAGjB,eAAe,GAAGW,MAAvC;AACA,QAAMO,aAAa,GACjB,CAACF,cAAc,CAACG,GAAf,GAAqBH,cAAc,CAACL,MAArC,IAA+CM,YADjD;AAEA,QAAMG,gBAAgB,GAAGC,gBAAgB,GAAG,EAA5C;AACA,QAAMlB,KAAK,GAAG,KAAKiB,gBAAnB;AACA,SACE,MAAC,cAAD;AAAgB,IAAA,KAAK,EAAG,GAAEjB,KAAM,GAAhC;AAAoC,IAAA,QAAQ,EAAEY,GAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,QADH,CADF;AAKD,CAbD;;AAeA,MAAMQ,QAAQ,GAAG,MAAM;AACrB,SACE,MAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKD,CAND;;AAQA,eAAeA,QAAf","sourcesContent":["import React, { useEffect, useLayoutEffect, useRef, useState } from \"react\";\nimport { createComponent } from \"react-fela\";\nimport throttle from \"lodash/fp/throttle\";\n\n// import Image from \"../../data/images/CH.jpg\";\nimport getScreenHeight from \"../../utils/getScreenHeight\";\nimport getBoundingClient from \"../../utils/getBoundingClient\";\n\nconst imageContainer = ({ width = \"100%\" }) => ({\n  width,\n  marginTop: \"800px\",\n  marginBottom: \"800px\"\n});\n\nconst ImageContainer = createComponent(imageContainer, \"div\", [\"innerRef\"]);\n\nconst styledImage = () => ({\n  width: \"100%\"\n});\n\nconst StyledImage = createComponent(styledImage, \"image\", [\"src\"]);\n\nconst styledBlock = () => ({\n  width: \"100%\",\n  backgroundColor: \"blue\",\n  height: \"300px\"\n});\n\nconst StyledBlock = createComponent(styledBlock, \"div\");\n\nconst ImageWrapper = ({ children }) => {\n  const ref = useRef();\n  const boundingClient = getBoundingClient(ref);\n  const screenHeight = getScreenHeight().height;\n  const onScreenRatio =\n    (boundingClient.top + boundingClient.height) / screenHeight;\n  const percentageChange = onSonScreenRatio * 30;\n  const width = 70 + percentageChange;\n  return (\n    <ImageContainer width={`${width}%`} innerRef={ref}>\n      {children}\n    </ImageContainer>\n  );\n};\n\nconst ResizeBC = () => {\n  return (\n    <ImageWrapper>\n      <StyledBlock />\n    </ImageWrapper>\n  );\n};\n\nexport default ResizeBC;\n"]},"metadata":{},"sourceType":"module"}