{"ast":null,"code":"var _jsxFileName = \"/Users/j.ruffle/GithubProjects/animations-with-hooks/components/StickySlides/index.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { createComponent } from \"react-fela\";\nimport getScreenHeight from \"../../utils/getScreenHeight\";\nimport getBoundingClient from \"../../utils/getBoundingClient\";\n\nconst slideContainer = () => ({\n  position: \"relative\"\n});\n\nconst SlideContainer = createComponent(slideContainer, \"div\");\n\nconst slideWrapper = ({\n  backgroundColor = \"blue\",\n  zIndex\n}) => ({\n  width: \"100%\",\n  position: \"sticky\",\n  top: 0,\n  height: \"100vh\",\n  backgroundColor,\n  zIndex\n});\n\nconst SlideWrapper = createComponent(slideWrapper, \"div\");\n\nconst slideImage = () => ({\n  width: \"100%\",\n  objectFit: \"contain\"\n});\n\nconst SlideImage = createComponent(slideImage, \"img\", [\"src\"]);\n\nconst Slide = ({\n  zIndex,\n  imageSrc\n}) => {\n  return __jsx(SlideWrapper, {\n    zIndex: zIndex,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, __jsx(SlideImage, {\n    src: imageSrc,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }));\n};\n\nconst StickySlides = ({\n  images\n}) => __jsx(SlideContainer, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 38\n  },\n  __self: this\n}, images.map((item, index) => __jsx(Slide, {\n  zIndex: (index + 1) * 2,\n  imageSrc: item,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 40\n  },\n  __self: this\n})));\n\nexport default StickySlides;","map":{"version":3,"sources":["/Users/j.ruffle/GithubProjects/animations-with-hooks/components/StickySlides/index.js"],"names":["React","createComponent","getScreenHeight","getBoundingClient","slideContainer","position","SlideContainer","slideWrapper","backgroundColor","zIndex","width","top","height","SlideWrapper","slideImage","objectFit","SlideImage","Slide","imageSrc","StickySlides","images","map","item","index"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,eAAT,QAAgC,YAAhC;AACA,OAAOC,eAAP,MAA4B,6BAA5B;AACA,OAAOC,iBAAP,MAA8B,+BAA9B;;AAEA,MAAMC,cAAc,GAAG,OAAO;AAC5BC,EAAAA,QAAQ,EAAE;AADkB,CAAP,CAAvB;;AAIA,MAAMC,cAAc,GAAGL,eAAe,CAACG,cAAD,EAAiB,KAAjB,CAAtC;;AAEA,MAAMG,YAAY,GAAG,CAAC;AAAEC,EAAAA,eAAe,GAAG,MAApB;AAA4BC,EAAAA;AAA5B,CAAD,MAA2C;AAC9DC,EAAAA,KAAK,EAAE,MADuD;AAE9DL,EAAAA,QAAQ,EAAE,QAFoD;AAG9DM,EAAAA,GAAG,EAAE,CAHyD;AAI9DC,EAAAA,MAAM,EAAE,OAJsD;AAK9DJ,EAAAA,eAL8D;AAM9DC,EAAAA;AAN8D,CAA3C,CAArB;;AASA,MAAMI,YAAY,GAAGZ,eAAe,CAACM,YAAD,EAAe,KAAf,CAApC;;AAEA,MAAMO,UAAU,GAAG,OAAO;AACxBJ,EAAAA,KAAK,EAAE,MADiB;AAExBK,EAAAA,SAAS,EAAE;AAFa,CAAP,CAAnB;;AAIA,MAAMC,UAAU,GAAGf,eAAe,CAACa,UAAD,EAAa,KAAb,EAAoB,CAAC,KAAD,CAApB,CAAlC;;AAEA,MAAMG,KAAK,GAAG,CAAC;AAAER,EAAAA,MAAF;AAAUS,EAAAA;AAAV,CAAD,KAA0B;AACtC,SACE,MAAC,YAAD;AAAc,IAAA,MAAM,EAAET,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,UAAD;AAAY,IAAA,GAAG,EAAES,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKD,CAND;;AAQA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KACnB,MAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACGA,MAAM,CAACC,GAAP,CAAW,CAACC,IAAD,EAAOC,KAAP,KACV,MAAC,KAAD;AAAO,EAAA,MAAM,EAAE,CAACA,KAAK,GAAG,CAAT,IAAc,CAA7B;AAAgC,EAAA,QAAQ,EAAED,IAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADD,CADH,CADF;;AAQA,eAAeH,YAAf","sourcesContent":["import React from \"react\";\nimport { createComponent } from \"react-fela\";\nimport getScreenHeight from \"../../utils/getScreenHeight\";\nimport getBoundingClient from \"../../utils/getBoundingClient\";\n\nconst slideContainer = () => ({\n  position: \"relative\"\n});\n\nconst SlideContainer = createComponent(slideContainer, \"div\");\n\nconst slideWrapper = ({ backgroundColor = \"blue\", zIndex }) => ({\n  width: \"100%\",\n  position: \"sticky\",\n  top: 0,\n  height: \"100vh\",\n  backgroundColor,\n  zIndex\n});\n\nconst SlideWrapper = createComponent(slideWrapper, \"div\");\n\nconst slideImage = () => ({\n  width: \"100%\",\n  objectFit: \"contain\"\n});\nconst SlideImage = createComponent(slideImage, \"img\", [\"src\"]);\n\nconst Slide = ({ zIndex, imageSrc }) => {\n  return (\n    <SlideWrapper zIndex={zIndex}>\n      <SlideImage src={imageSrc} />\n    </SlideWrapper>\n  );\n};\n\nconst StickySlides = ({ images }) => (\n  <SlideContainer>\n    {images.map((item, index) => (\n      <Slide zIndex={(index + 1) * 2} imageSrc={item} />\n    ))}\n  </SlideContainer>\n);\n\nexport default StickySlides;\n"]},"metadata":{},"sourceType":"module"}